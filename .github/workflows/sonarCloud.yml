name: SonarCloud Analysis & Auto Issue Creation

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  

permissions:
  contents: read
  issues: write
  pull-requests: read

jobs:
  sonar:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (Fix shallow clone)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: npm install  

      - name: Get Latest Git Tag
        run: |
          TAG=$(git describe --tags --always || echo "0.0.1")
          echo "SONAR_VERSION=$TAG" >> $GITHUB_ENV
          echo "Using SonarCloud version: $TAG"

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonarqube-scanner \
            -Dsonar.organization=front-end-project \
            -Dsonar.projectKey=manoj-wws_Sonar-Qube-Tester \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectVersion=${{ env.SONAR_VERSION }}

      - name: Fetch SonarCloud Issues
        id: sonar_issues
        run: |
          SONAR_URL="https://sonarcloud.io/api/issues/search?organization=front-end-project&componentKeys=manoj-wws_Sonar-Qube-Tester&resolved=false"
          RESPONSE=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "$SONAR_URL")

          echo "SonarCloud API Response: $RESPONSE"

          ISSUE_COUNT=$(echo "$RESPONSE" | jq '.total // 0')
          echo "Total Issues Found: $ISSUE_COUNT"
          echo "issue_count=$ISSUE_COUNT" >> $GITHUB_ENV

          if [[ "$ISSUE_COUNT" -gt 0 ]]; then
            ISSUE_MESSAGE=$(echo "$RESPONSE" | jq -r '.issues[0].message // empty')
            ISSUE_FILE=$(echo "$RESPONSE" | jq -r '.issues[0].component // empty')
            ISSUE_LINE=$(echo "$RESPONSE" | jq -r '.issues[0].line // empty')
            ISSUE_SEVERITY=$(echo "$RESPONSE" | jq -r '.issues[0].severity // empty')
            ISSUE_RULE_URL="https://sonarcloud.io/organizations/front-end-project/issues?open=$(echo "$RESPONSE" | jq -r '.issues[0].key // empty')"

            echo "ISSUE_MESSAGE=$ISSUE_MESSAGE" >> $GITHUB_ENV
            echo "ISSUE_FILE=$ISSUE_FILE" >> $GITHUB_ENV
            echo "ISSUE_LINE=$ISSUE_LINE" >> $GITHUB_ENV
            echo "ISSUE_SEVERITY=$ISSUE_SEVERITY" >> $GITHUB_ENV
            echo "ISSUE_RULE_URL=$ISSUE_RULE_URL" >> $GITHUB_ENV
          else
            echo "No issues found by SonarCloud."
          fi

      - name: Ensure "SonarCloud" Label Exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh label list --repo ${{ github.repository }} | grep -q "SonarCloud"; then
            echo "Creating 'SonarCloud' label..."
            gh label create "SonarCloud" --description "Issues found by SonarCloud analysis" --color "#0e8a16" --repo ${{ github.repository }}
          else
            echo "'SonarCloud' label already exists."
          fi

      - name: Create GitHub Issue (if new issues found)
        if: ${{ env.issue_count != '' && env.issue_count != '0' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking for extracted issue data..."
          echo "Message: ${{ env.ISSUE_MESSAGE }}"
          echo "File: ${{ env.ISSUE_FILE }}"
          echo "Severity: ${{ env.ISSUE_SEVERITY }}"
          echo "Rule URL: ${{ env.ISSUE_RULE_URL }}"

          if [[ -z "${{ env.ISSUE_MESSAGE }}" || -z "${{ env.ISSUE_FILE }}" || -z "${{ env.ISSUE_SEVERITY }}" || -z "${{ env.ISSUE_RULE_URL }}" ]]; then
            echo "‚ö†Ô∏è No valid issue data received from SonarCloud. Skipping issue creation."
            exit 0
          fi

          ISSUE_TITLE="üö® [${{ env.ISSUE_SEVERITY }}] SonarCloud Issue in $(basename "${{ env.ISSUE_FILE }}")"
          ISSUE_BODY=$(cat <<EOF
          **Issue:** ${{ env.ISSUE_MESSAGE }}

          **File:** \`$(basename "${{ env.ISSUE_FILE }}")\`
          **Line:** ${{ env.ISSUE_LINE }}
          **Severity:** ${{ env.ISSUE_SEVERITY }}
          **SonarCloud Report:** [View Issue](${{ env.ISSUE_RULE_URL }})

          Please check and resolve this issue.
          EOF
          )

          gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY" --label "SonarCloud" --repo ${{ github.repository }}
